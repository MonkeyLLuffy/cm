package cn.dlb.cm.service.contractRecord;

import java.util.Date;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.dlb.cm.dao.contractRecord.ContractRecordDao;
import cn.dlb.cm.entity.ContractRecord;
import cn.dlb.cm.entity.PageBean;
import cn.dlb.cm.entity.Query_ContractRecord;

@Service
public class ContractRecordServiceImpl implements ContractRecordService {
	@Autowired
	private ContractRecordDao contractRecordDao;

	@Override
	public PageBean findadvancedSearch(Query_ContractRecord contractRecord,
			PageBean pageBean,String importDateSort,String signingDateSort,String deadlineSort) {

		PageBean newPageBean = getPageBean(pageBean);
		java.sql.Date signingDateStartSQL=null;
		java.sql.Date signingDateEndSQL =null;
		java.sql.Date importDateStartSQL = null;
		java.sql.Date importDateEndSQL = null;
		java.sql.Date deadlineStartSQL = null;
		java.sql.Date deadlineEndSQL=null;
		
		if (contractRecord.getSigningDateStart() != null) {
			signingDateStartSQL = dateChange(contractRecord
					.getSigningDateStart());
		}
		if (contractRecord.getSigningDateEnd() != null) {
			signingDateEndSQL = dateChange(contractRecord
					.getSigningDateEnd());
		}
		if (contractRecord.getImportDateStart() != null) {
			importDateStartSQL = dateChange(contractRecord
					.getImportDateStart());
		}
		if (contractRecord.getImportDateEnd() != null) {
			importDateEndSQL = dateChange(contractRecord
					.getImportDateEnd());
		}
		if (contractRecord.getDeadlineStart() != null) {
			deadlineStartSQL = dateChange(contractRecord
					.getDeadlineStart());
		}
		if (contractRecord.getDeadlineEnd() != null) {
			 deadlineEndSQL = dateChange(contractRecord
					.getDeadlineEnd());
		}
		
		return contractRecordDao.findadvancedSearch(contractRecord,
				newPageBean, signingDateStartSQL, signingDateEndSQL,
				importDateStartSQL, importDateEndSQL, deadlineStartSQL,
				deadlineEndSQL,importDateSort,signingDateSort,deadlineSort);
	}

	private PageBean getPageBean(PageBean pageBean) {
		if (pageBean == null) {
			pageBean = new PageBean();
			pageBean.setCurrentPage(1);
			pageBean.setPageSize(25);
		}
		if (pageBean.getCurrentPage() == 0) {
			pageBean.setCurrentPage(1);
		}
		if (pageBean.getPageSize() == 0) {
			pageBean.setPageSize(25);
		}
		return pageBean;
	}

	private java.sql.Date dateChange(Date date) {

		java.sql.Date newdate = new java.sql.Date(date.getTime());
		return newdate;
	}

	@Override
	public void deleteContractRecord(String id) {
		contractRecordDao.delete(id);
	}

	@Override
	public Map<String, Object> getRecycleBinData(String condition, int rows,
			int page) {
		// TODO Auto-generated method stub
		return contractRecordDao.getRecycleBinData(condition,rows,page);
	}
}
