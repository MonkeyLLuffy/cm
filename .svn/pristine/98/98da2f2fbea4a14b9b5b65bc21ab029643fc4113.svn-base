package cn.dlb.cm.dao.contractRecord;

import java.util.List;

import org.springframework.stereotype.Repository;

import cn.dlb.cm.base.dao.BaseDaoImpl;
import cn.dlb.cm.entity.ContractRecord;
import cn.dlb.cm.entity.PageBean;
import cn.dlb.cm.entity.Query_ContractRecord;

@Repository
public class contractRecordDaoImpl extends BaseDaoImpl<ContractRecord>
		implements ContractRecordDao {


	@Override
	public PageBean findadvancedSearch(Query_ContractRecord contractRecord,
			PageBean pageBean, java.sql.Date signingDateStartSQL,
			java.sql.Date signingDateEndSQL, java.sql.Date importDateStartSQL,
			java.sql.Date importDateEndSQL, java.sql.Date deadlineStartSQL,
			java.sql.Date deadlineEndSQL) {

		StringBuilder HQL = new StringBuilder("FROM ContractRecord where 1=1");
		if (contractRecord.getId() != null
				&& !"".equals(contractRecord.getId())) {
			HQL.append(" and ID like '%" + contractRecord.getId() + "%'");
		}
		if (contractRecord.getContractName() != null
				&& !"".equals(contractRecord.getContractName())) {
			HQL.append(" and CONTRACTNAME like '%" + contractRecord.getContractName()
					+ "%'");
		}
		if (contractRecord.getPartyA() != null
				&& !"".equals(contractRecord.getPartyA())) {
			HQL.append(" and PARTYA like '%" + contractRecord.getPartyA()
					+ "%'");
		}
		if (contractRecord.getPartyB() != null
				&& !"".equals(contractRecord.getPartyB())) {
			HQL.append(" and PARTYB like '%" + contractRecord.getPartyB()
					+ "%'");
		}
		if (contractRecord.getContractAmount() != null
				&& !"".equals(contractRecord.getContractAmount())) {
			HQL.append(" and CONTRACTAMOUNT like '%"
					+ contractRecord.getContractAmount() + "%'");
		}
		if (contractRecord.getOperator() != null
				&& !"".equals(contractRecord.getOperator())) {
			HQL.append(" and OPERATOR like '%" + contractRecord.getOperator()
					+ "%'");
		}
		if (contractRecord.getDepart() != null
				&& !"".equals(contractRecord.getDepart())) {
			HQL.append(" and DEPART = '" + contractRecord.getDepart() + "'");
		}
		if (contractRecord.getContractType() != null
				&& !"".equals(contractRecord.getContractType())) {
			HQL.append(" and CONTRACTTYPE = '"
					+ contractRecord.getContractType() + "'");
		}
		if (signingDateStartSQL != null && signingDateEndSQL != null) {
			HQL.append(" and SIGNINGDATE between '" + signingDateStartSQL + "' and '"
					+ signingDateEndSQL  + "'");
		}
		if (importDateStartSQL != null && importDateEndSQL != null) {
			HQL.append(" and IMPORTDATE between '" + importDateStartSQL + "' and '"
					+ importDateEndSQL + "'");
		}
		if (deadlineStartSQL != null && deadlineEndSQL  != null) {
			HQL.append(" and DEADLINE between '" + deadlineStartSQL + "' and '"
					+ deadlineEndSQL + "'");
		}
		
		StringBuilder count = new StringBuilder("select count(*) ");
		count.append(HQL);
		Long _recordNum = (Long) getSession().createQuery(count.toString())
				.uniqueResult();
		int recordNum = _recordNum.intValue();
		
		HQL.append(" order by importDate desc");
		List<ContractRecord> list = getSession()
				.createQuery(HQL.toString())
				.setFirstResult(
						(pageBean.getCurrentPage() - 1)
								* pageBean.getPageSize())
				.setMaxResults(pageBean.getPageSize()).getResultList();

		PageBean newPageBean = new PageBean(pageBean.getCurrentPage(),
				pageBean.getPageSize(), recordNum, list);
		return newPageBean;
	}

}
